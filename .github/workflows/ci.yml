name: Continuous integration

on:
  pull_request:
    types: opened
    branches: 
      - development
      - uat
      - release
      - main

jobs:
  CI_development:
    if: ${{ github.base_ref == 'development' }}
    runs-on: ubuntu-latest
    env:
      version_dev: $(node --eval="process.stdout.write(require('./package.json').version)")

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
#         with:
#           path: 'D:\Devp\cldgit\actions-runner\_work\Angular_welcome_page\Angular_welcome_page'
#           ref: ${{ github.head_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Build and Package the alpha version
        run: |
            npm ci
            npm run build --if-present

      - name: Versioning
        run: |
          npm version minor
          git push origin ${{ github.head_ref }}

      - name: Package and publish the alpha version
        env:
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_alpha_v${{ env.version_dev }}.zip"
          gh release create "AWP_alpha_v${{ env.version_dev }}" -t "AWP_alpha_v${{ env.version_dev }}" ".\dist\AWP_alpha_v${{ env.version_dev }}.zip"
    
  CI_UAT:
    if: ${{ github.base_ref == 'UAT' }}
    runs-on: [ self-hosted ]
    env:
      version_uat: $(node --eval="process.stdout.write(require('./package.json').version)")
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 'D:\Devp\cldgit\actions-runner\_work\Angular_welcome_page\Angular_welcome_page'          
          ref: ${{ github.head_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: SonarQube scanning the ${{ github.head_ref}} branch
        run: sonar-scanner.bat -D"sonar.projectKey=HDFC-DevOps-Test_Angular_welcome_page" -D"sonar.sources=." -D"sonar.host.url=http://10.124.18.56" -D"sonar.login=${{ secrets.SONAR_SCAN_TOKEN }}"
        env:
          SONAR_SCAN_TOKEN: ${{ secrets.SONAR_SCAN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name:
        run: echo "Version is ${{ env.version_uat }}"
      - name: Build and package the beta version
        run: |
            npm ci
            npm run build --if-present

      - name: Package and publish the beta version
        env:
          
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_beta_v${{ env.version_uat }}.zip"
          gh release create "AWP_beta_v${{ env.version_uat }}" -t "AWP_beta_v${{ env.version_uat }}" ".\dist\AWP_beta_v${{ env.version_uat }}.zip"
        
  CI_release:
    if: ${{ github.base_ref == 'release' }}
    runs-on: [ self-hosted ]
    env:
      version_rc: $(node --eval="process.stdout.write(require('./package.json').version)")
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        if: startsWith(github.head_ref, 'UAT')
        uses: actions/checkout@v3
        with:
          path: 'D:\Devp\cldgit\actions-runner\_work\Angular_welcome_page\Angular_welcome_page'
          ref: ${{ github.head_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: startsWith(github.head_ref, 'UAT')
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: SonarQube scanning the ${{ github.head_ref }} branch
        run: sonar-scanner.bat -D"sonar.projectKey=HDFC-DevOps-Test_Angular_welcome_page" -D"sonar.sources=." -D"sonar.host.url=http://10.124.18.56" -D"sonar.login=${{ secrets.SONAR_SCAN_TOKEN }}"  
        env:
          SONAR_SCAN_TOKEN: ${{ secrets.SONAR_SCAN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}         

      - name: rc version
        run: echo "Version is ${{ env.version_rc }} "
      - name: Build and package the rc version
        if: startsWith(github.head_ref, 'UAT')
        run: |
            npm ci
            npm run build --if-present

      - name: Package and publish the rc version
        if: startsWith(github.head_ref, 'UAT')
        env:
          version_rc: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_rc_v${{ env.version_rc }}.zip"
          gh release create "AWP_rc_v${{ env.version_rc }}" -t "AWP_rc_v${{ env.version_rc }}" ".\dist\AWP_rc_v${{ env.version_rc }}.zip"

  CI_main:
    if: ${{ github.base_ref == 'main' }}
    runs-on: [ self-hosted ]

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        if : startsWith(github.head_ref, 'release') 
        uses: actions/checkout@v3
        with:
          path: 'D:\Devp\cldgit\actions-runner\_work\Angular_welcome_page\Angular_welcome_page'
          ref: ${{ github.head_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        if : startsWith(github.head_ref, 'release')
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: SonarQube scanning the ${{ github.head_ref }} branch
        run: sonar-scanner.bat -D"sonar.projectKey=HDFC-DevOps-Test_Angular_welcome_page" -D"sonar.sources=." -D"sonar.host.url=http://10.124.18.56" -D"sonar.login=${{ secrets.SONAR_SCAN_TOKEN }}"
        env:
          SONAR_SCAN_TOKEN: ${{ secrets.SONAR_SCAN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Build and packages the live version
        if : startsWith(github.head_ref, 'release')
        run: |
            npm ci
            npm run build --if-present

      - name: Package and publish the live version
        if : startsWith(github.head_ref, 'release')
        env:
          version_main: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_live_v${{ env.version_main }}.zip"
          gh release create "AWP_live_v${{ env.version_main }}" -t "AWP_live_v${{ env.version_main }}" ".\dist\AWP_live_v${{ env.version_main }}.zip"      
     
  CI_bugfix:
    if: startsWith(github.head_ref, 'bugfix/') || startsWith(github.head_ref, 'hotfix/')
    runs-on: [ self-hosted ]

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 'D:\Devp\cldgit\actions-runner\_work\Angular_welcome_page\Angular_welcome_page'
          ref: ${{ github.head_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: SonarQube scanning for $ {{ github.head_ref }} branch
        run: sonar-scanner.bat -D"sonar.projectKey=HDFC-DevOps-Test_Angular_welcome_page" -D"sonar.sources=." -D"sonar.host.url=http://10.124.18.56" -D"sonar.login=${{ secrets.SONAR_SCAN_TOKEN }}"
        env:
          SONAR_SCAN_TOKEN: ${{ secrets.SONAR_SCAN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}      

      - name: Build and package the bugfix 
        run: |
            npm ci
            npm run build --if-present

      - name: Versioning 
        run: |
          npm version patch
          git push origin ${{ github.head_ref }}
          
      - name: Package and publish the alpha version
        if: ${{ github.base_ref == 'development' }}
        env:
          version_fix: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_alpha_v${{ env.version_fix }}.zip"
          gh release create "AWP_alpha_v${{ env.version_fix }}" -t "AWP_alpha_v${{ env.version_fix }}" ".\dist\AWP_alpha_v${{ env.version_fix }}.zip"  

      - name: Package and publish the beat version
        if: ${{ github.base_ref == 'UAT' }}
        env:
          version_fix: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_beta_v${{ env.version_fix }}.zip"
          gh release create "AWP_beta_v${{ env.version_fix }}" -t "AWP_beta_v${{ env.version_fix }}" ".\dist\AWP_beta_v${{ env.version_fix }}.zip"  

      - name: Package and publish the rc version
        if: ${{ github.base_ref == 'release' }}
        env:
          version_fix: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_rc_v${{ env.version_fix }}.zip"
          gh release create "AWP_rc_v${{ env.version_fix }}" -t "AWP_rc_v${{ env.version_fix }}" ".\dist\AWP_rc_v${{ env.version_fix }}.zip"

      - name: Package and publish the live version
        if: ${{ github.base_ref == 'main' }}
        env:
          version_fix: $(node --eval="process.stdout.write(require('./package.json').version)")
          GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_HOST: "cldgit.hdfc.com"
        run: |
          Compress-Archive -Path ".\dist\devops" -DestinationPath ".\dist\AWP_live_v${{ env.version_fix }}.zip"
          gh release create "AWP_live_v${{ env.version_fix }}" -t "AWP_live_v${{ env.version_fix }}" ".\dist\AWP_live_v${{ env.version_fix }}.zip"    


  
